{"version":3,"sources":["now-confirm-dialog.ts"],"names":[],"mappings":"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","file":"now-confirm-dialog.js","sourcesContent":["namespace NowElements {\n\n\t/**\n\t * Confirmation dialog for use in Red Pill Now apps\n\t *\n\t * @author Keith Strickland\n\t */\n\t@component('now-confirm-dialog')\n\texport class NowConfirmDialog extends NowElements.BaseElement {\n\n\t\t/**\n\t\t * The title of the dialog\n\t\t * @type {String}\n\t\t */\n\t\t@property({\n\t\t\ttype: String\n\t\t})\n\t\tdialogTitle: string\n\t\t/**\n\t\t * The text of the dialog\n\t\t * @type {String}\n\t\t */\n\t\t@property({\n\t\t\ttype: String\n\t\t})\n\t\tdialogText: string\n\t\t/**\n\t\t * The text which shows in the confirm button\n\t\t * @type {String}\n\t\t */\n\t\t@property({\n\t\t\ttype: String,\n\t\t\tvalue: 'OK'\n\t\t})\n\t\tconfirmButtonText: string;\n\t\t/**\n\t\t * The text which shows in the cancel button\n\t\t * @type {Stromg}\n\t\t */\n\t\t@property({\n\t\t\ttype: String,\n\t\t\tvalue: 'Cancel'\n\t\t})\n\t\tcancelButtonText: string;\n\t\t/**\n\t\t * The hex color of the confirm button background\n\t\t * @type {String}\n\t\t */\n\t\t@property({\n\t\t\ttype: String,\n\t\t\tobserver: '_onConfirmBackgroundChange'\n\t\t})\n\t\tconfirmButtonBackground: string;\n\t\t/**\n\t\t * The hex color of the confirm button text\n\t\t * @type {String}\n\t\t */\n\t\t@property({\n\t\t\ttype: String,\n\t\t\tobserver: '_onConfirmColorChange'\n\t\t})\n\t\tconfirmButtonColor: string;\n\t\t/**\n\t\t * The hex color of the cancel button background\n\t\t * @type {String}\n\t\t */\n\t\t@property({\n\t\t\ttype: String,\n\t\t\tobserver: '_onCancelBackgroundChange'\n\t\t})\n\t\tcancelButtonBackground: string;\n\t\t/**\n\t\t * The hex color of the cancel button text\n\t\t * @type {String}\n\t\t */\n\t\t@property({\n\t\t\ttype: String,\n\t\t\tobserver: '_onCancelColorChange'\n\t\t})\n\t\tcancelButtonColor: string;\n\t\t/**\n\t\t * True if there should be no cancel button\n\t\t * @type {Boolean}\n\t\t */\n\t\t@property({\n\t\t\ttype: Boolean,\n\t\t\tvalue: false,\n\t\t\treflectToAttribute: true\n\t\t})\n\t\tnoCancelButton: boolean;\n\t\t/**\n\t\t * The callback function to run if the dialog is cancelled\n\t\t * @type {Function}\n\t\t */\n\t\t@property({\n\t\t\ttype: Function\n\t\t})\n\t\t_cancelCallback: any;\n\t\t/**\n\t\t * The callback function to run if the dialog is confirmed\n\t\t * @type {Function}\n\t\t */\n\t\t@property({\n\t\t\ttype: Function\n\t\t})\n\t\t_confirmCallback: any;\n\t\t/**\n\t\t * Define this property to move this element when opened into the element\n\t\t * with the provided selector. This is to ensure that the overlay\n\t\t * does not appear over the dialog.\n\t\t */\n\t\t@property({\n\t\t\ttype: String\n\t\t})\n\t\ttargetMoveCssSelector: string;\n\n\t\t@observe('dialogText')\n\t\tprivate _onDialogTextChange(dialogText) {\n\t\t\tif (dialogText.indexOf('\\n') > -1) {\n\t\t\t\tthis.toggleClass('preText', true, this.$.dialogText);\n\t\t\t} else {\n\t\t\t\tthis.toggleClass('preText', false, this.$.dialogText);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Fired when the dialog closes. Fires dig-confirm-canceled and dig-confirm-confirmed. Also\n\t\t * runs any cancelCallback or confirmCallback methods\n\t\t * @param  {Event} evt    The event object\n\t\t * @param  {Object} detail The detail object\n\t\t */\n\t\t@listen('dialog.iron-overlay-closed')\n\t\t_onDialogClosed(evt, detail) {\n\t\t\tif (!detail.confirmed) {\n\t\t\t\tif (this._cancelCallback) {\n\t\t\t\t\tthis._cancelCallback.call(this);\n\t\t\t\t}\n\t\t\t\tthis.fire('dig-confirm-canceled');\n\t\t\t}else if (detail.confirmed) {\n\t\t\t\tif (this._confirmCallback) {\n\t\t\t\t\tthis._confirmCallback.call(this);\n\t\t\t\t}\n\t\t\t\tthis.fire('dig-confirm-confirmed');\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Fired when the confirmButtonBackground changes. Sets the custom style variable --confirm-button-background\n\t\t * @param  {String} newVal The new color\n\t\t * @param  {String} oldVal The old color\n\t\t */\n\t\t_onConfirmBackgroundChange(newVal, oldVal) {\n\t\t\tif (newVal) {\n\t\t\t\tthis.customStyle['--now-confirm-dialog-confirm-button-background'] = newVal;\n\t\t\t\tthis.updateStyles();\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Fired when the confirmButtonColor changes. Sets the custom style variable --confirm-button-color\n\t\t * @param  {String} newVal The new color\n\t\t * @param  {String} oldVal The old color\n\t\t */\n\t\t_onConfirmColorChange(newVal, oldVal) {\n\t\t\tif (newVal) {\n\t\t\t\tthis.customStyle['--now-confirm-dialog-conform-button-color'] = newVal;\n\t\t\t\tthis.updateStyles();\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Fired when the cancelButtonBackground changes. Sets the custom style variable --cancel-button-background\n\t\t * @param  {String} newVal The new color\n\t\t * @param  {String} oldVal The old color\n\t\t */\n\t\t_onCancelBackgroundChange(newVal, oldVal) {\n\t\t\tif (newVal) {\n\t\t\t\tthis.customStyle['--now-confirm-dialog-cancel-button-background'] = newVal;\n\t\t\t\tthis.updateStyles();\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Fired when the cancelButtonColor changes. Sets the custom style variable --cancel-button-color\n\t\t * @param  {String} newVal The new color\n\t\t * @param  {String} oldVal The old color\n\t\t * @return {[type]}        [description]\n\t\t */\n\t\t_onCancelColorChange(newVal, oldVal) {\n\t\t\tif (newVal) {\n\t\t\t\tthis.customStyle['--now-confirm-dialog-cancel-button-color'] = newVal;\n\t\t\t\tthis.updateStyles();\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Opens the dialog and sets the cancel and confirm callbacks\n\t\t * @param  {Function} confirmCallback Function to run when the dialog is confirmed\n\t\t * @param  {Function} cancelCallback  Function to run when the dialog is cancelled\n\t\t */\n\t\topen(confirmCallback, cancelCallback) {\n\t\t\t// WARNING!!! TODO:\n\t\t\t// Moving this as a child of a top level element, outside of the app-*-layout element\n\t\t\t// is to fix this bug https://github.com/PolymerElements/paper-dialog/issues/7\n\t\t\t// which is kind of ridiculus for a production ready platform.\n\t\t\t// Luckily there really is no data binding with this component or that too\n\t\t\t// would be broken.\n\t\t\tif (this.targetMoveCssSelector) {\n\t\t\t\tlet elem = document.querySelector(this.targetMoveCssSelector);\n\t\t\t\tif (elem) {\n\t\t\t\t\telem.appendChild(this);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.$.dialog.open();\n\t\t\tif (cancelCallback) {\n\t\t\t\tthis._cancelCallback = cancelCallback;\n\t\t\t}\n\t\t\tif (confirmCallback) {\n\t\t\t\tthis._confirmCallback = confirmCallback;\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Closes the dialog. Will cause the cancel callback to be run\n\t\t * in the iron-overlay-closed event handler\n\t\t */\n\t\tclose() {\n\t\t\tthis.$.dialog.close();\n\t\t\tif (this.targetMoveCssSelector) {\n\t\t\t\tlet movedDialog = document.querySelector(this.targetMoveCssSelector + ' > now-confirm-dialog');\n\t\t\t\tif (movedDialog) {\n\t\t\t\t\tmovedDialog.parentNode.removeChild(movedDialog);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nNowElements.NowConfirmDialog.register();\n"]}